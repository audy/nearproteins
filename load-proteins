#!/usr/bin/env python
import nearproteins as nerp

import argparse
import logging

from Bio import SeqIO

from itertools import islice

def parse_args():

    parser = argparse.ArgumentParser()

    parser.add_argument('--input', default='/dev/stdin')
    parser.add_argument('--output', default='/dev/stdout')

    return parser.parse_args()


def main():
    args = parse_args()

    logging.basicConfig(level=logging.INFO,
            filename='/dev/stderr')

    store = nerp.SimilarStringStore()
    logging.info('store: %s' % store)

    logging.info('adding proteins to store')

    with open(args.input) as handle:
        records = { int(r.id): str(r.seq) for r in islice(SeqIO.parse(handle, 'fasta'), 1000) }


    for id, seq in records.items():
        store.add(id, seq)

    store.build_and_save()
    store.load()

    caught, missed = 0, 0

    for id, seq in records.items():
        if id in set(store.query(seq)):
            caught += 1
        else:
            missed += 1

    print('{} caught, {} missed'.format(caught, missed))


if __name__ == '__main__':
    main()
