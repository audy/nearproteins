#!/usr/bin/env python
import nearproteins as nerp

import argparse
import logging
import json

from Bio import SeqIO

def parse_args():

    parser = argparse.ArgumentParser()

    parser.add_argument('--input', default='/dev/stdin')
    parser.add_argument('--output', default='/dev/stdout')

    return parser.parse_args()


def main():
    args = parse_args()

    logging.basicConfig(level=logging.INFO,
            filename='/dev/stderr')

    store = nerp.SimilarStringStore()
    logging.info('store: %s' % store)

    logging.info('engine: %s' % store.engine)

    out = open(args.output, 'w')

    with open(args.input) as handle:
        records = SeqIO.parse(handle, 'fasta')

        for i, record in enumerate(records):

            neighbors = store.query(str(record.seq))

            results = { x[1]: x[2] for x in neighbors }
            results['query'] = record.id

            if len(neighbors) > 0:
                print json.dumps(results)

if __name__ == '__main__':
    main()
